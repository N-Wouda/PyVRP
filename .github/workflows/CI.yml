name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - compiler: gcc
            compiler-version: '9'  # minimum gcc version
            python-version: '3.7'  # minimum Python version
          - compiler: gcc
            compiler-version: latest
            python-version: '3.10'
          - compiler: clang
            compiler-version: '11'  # minimum clang version
            python-version: '3.7'  # minimum Python version
          - compiler: clang
            compiler-version: latest
            python-version: '3.10'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - if: matrix.compiler == 'clang'
        name: Set up clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.compiler-version }}
      - if: matrix.compiler == 'gcc'
        name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.compiler-version }}
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: hgs/src hgs/include hgs/test
          extensions: h, cpp
          clangFormatVersion: 11
      - name: Make all
        run: |
          cmake -Brelease -Shgs
          cmake --build release
      - name: Run unit tests (C++)
        run: |
          cd release
          ctest
      # TODO run Python tests
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          gcov: true
          # TODO gcov include/ignore
