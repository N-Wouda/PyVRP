[tool.poetry]
name = "pyvrp"
version = "1.0.0"
description = "A state-of-the-art vehicle routing problem solver."
authors = [
    "Niels Wouda <nielswouda@gmail.com>",
    "Leon Lan <leon.lanyidong@gmail.com>",
    "Wouter Kool <wouter.kool@ortec.com>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/N-Wouda/pyvrp"
include = [
    "LICENSE.md",
]
packages = [
    { include = "pyvrp" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
]

[tool.poetry.urls]
"Tracker" = "https://github.com/N-Wouda/pyvrp/issues"

[tool.poetry.dependencies]
python = "^3.8"
numpy = ">=1.15.2"
matplotlib = ">=2.2.0"

[tool.poetry.group.benchmark.dependencies]
tqdm = "^4.64.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest = ">=6.0.0"
pytest-cov = ">=2.6.1"
codecov = "*"

# These are used in the build script: for compiling the library (meson, ninja,
# and pybind11) and for generating type stubs (mypy).
meson = "^1.0.0"
ninja = "^1.11.1"
pybind11 = {extras = ["global"], version = "^2.10.3"}
mypy = "^0.991"
black = "^22.12.0"

[tool.poetry.scripts]
benchmark = "pyvrp.benchmark:main"
solve = "pyvrp.solve:main"

[tool.black]
line-length = 79

[tool.isort]
case_sensitive = true
line_length = 79
profile = "black"

[tool.mypy]
ignore_missing_imports = true

[tool.cibuildwheel]
skip = "cp36-* cp37-* cp38-* cp310-* cp311-* pp*"
build-verbosity = "3"
before-build = "poetry install"
test-requires = "pytest"
test-command = "poetry run pytest"

[tool.pytest.ini_options]
addopts = "--cov=. --cov-report=xml --cov-report=term"
testpaths = "pyvrp"

[tool.coverage.run]
omit = [
    "*/tests/*",
    "venv/*",
    "docs/*",
]

[tool.coverage.report]
exclude_lines = [
    # This excludes all abstract methods from code coverage checks,
    # as they are never instantiated directly anyway
    "pragma: no cover",
    "@abstract",
]

[build-system]
requires = ["poetry-core>=1.1.0", "setuptools", "pybind11", "meson", "ninja"]
build-backend = "poetry.core.masonry.api"
